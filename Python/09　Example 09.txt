
Example 09　情境實例-1

--------------------------------------------------------------------------------

9-1 密碼轉譯器:

Input :已知公司之密碼規則如下(1)將四位數密碼均加上5 ，使用者輸入加密後密碼
                             (2)將首尾項、中間項對調
Output:回算出原始密碼

--------------------------------------------------------------------------------

password=input("請輸入加密後密碼:")
#以字串逐位倒序輸出，再轉數字計算
for item in list(password)[::-1]:
    item=int(item)-5
    print(item, end="")


--------------------------------------------------------------------------------

9-2 九九乘法表:

#橫向輸出，故倍率range(1, 10)寫在外迴圈
for n in range(1, 10):
    for m in range(2, 6):
        #單行顯示不分行，%2d:控制格式二位數
        print("%dx%d=%2d"%(m, n, m*n), end=" ")
    #倍率改變(m, n迴圈之間)換行
    print("")

print("")

for n in range(1, 10):
    for m in range(6, 10):
        #單行顯示不分行，%2d:控制格式二位數
        print("%dx%d=%2d"%(m, n, m*n), end=" ")
    #倍率改變(m, n迴圈之間)換行
    print("")


--------------------------------------------------------------------------------

9-3 彈跳球問題:

Input :已知球體落地反彈高度為原高度之一半，使用者自由輸入起始高度、反跳次數
Output:顯示(1)球體第n次落地時所經過之總路徑長
           (2)球體第n次反彈時之高度

--------------------------------------------------------------------------------

height=float(input("請輸入起始高度:"))
rebounce=int(input("請輸入反跳次數:"))
route=height

if rebounce>=1:
    for i in range(1, rebounce):
        #第n次落地，路徑長就累加第n-1次反彈高度(來回乘上2)
        route+=2*0.5**(rebounce-1)*height
   
    #反彈n次，高度即乘上n次0.5
    rebounce_height=0.5**(rebounce)*height
 
    print("第%d次落地時所經過之路徑長為%.1f"%(rebounce, route))
    print("第%d次反彈時之高度為%.1f"%(rebounce, rebounce_height))
 
else:
    print("輸入有誤")


--------------------------------------------------------------------------------

9-4 猜數字遊戲:

Input :設定一1∼100之密碼，使用者自由輸值猜測
Output:提供範圍提示，並顯示總猜測次數

--------------------------------------------------------------------------------

import random
#產生隨機值:設定均質分布並轉成整數
bingo=int(random.uniform(0.5, 100.5))
times=0

while True:
    guess=int(input("請輸入一個數字 (1~100):"))
    #輸入猜測後累計次數
    times+=1

    if guess<bingo:
        print("比%d再大一點，猜第%d次:"%(guess, times+1))
    elif guess>bingo:
        print("比%d再小一點，猜第%d次:"%(guess, times+1))
    else:
        print("Bingo!答案就是%d"%(guess))
        break
 
if times<5:
    print("你花了%d次，非常厲害!"%(times))
elif times<9:
    print("你花了%d次，還不錯喔~"%(times))
else:
    print("你花了%d次，再接再厲!"%(times))


--------------------------------------------------------------------------------

9-5 整除生產器:

Input :使用者自由輸入一正奇數
Output:顯示最少幾個9才能整除該數(999999/13=76923)

--------------------------------------------------------------------------------

number=int(input("請輸入一正奇數:"))
digit=1 

while True:
　　#迴圈設定:10的N次方-1=N個9
    if (10**digit-1)%number==0:
        break
    else:
        digit+=1

print("%d/%d=%d"%(10**digit-1, number, (10**digit-1)/number))
